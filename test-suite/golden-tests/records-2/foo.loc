module foo (Map, push, makeMap)

type Py => Str = "str"
type Py => Int = "int"
type Py => (List a) = "list" a
type Py => (Map a b) = "dict" a b
type Py => (Tuple2 a b) = "tuple" a b

packMap      :: pack   => [(a,b)] -> Map a b
unpackMap    :: unpack => Map a b -> [(a,b)]

source Py from "foo.py" ("packMap", "unpackMap", "push", "makeMap")

push :: (n -> n')
     -> (n' -> e -> n -> (e', n'))
     -> (n' -> e -> l -> (e', l'))
     -> Map n (e, l)
     -> Map n' (e', l')

makeMap :: Str -> Int -> Map Str (Int, Str)
