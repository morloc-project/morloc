module main (foo)

import pybase
import conventions (Real, Str, List)

record DataA = DataA {a :: Real, b :: DataB}
record DataB = DataB {c :: [Real], d :: Str}

record Py => DataA = "dict" {a :: Real, b :: DataB}
record Py => DataB = "dict" {c :: [Real], d :: Str}

-- Fixing this will require typedef resolution, at least partially, within the general typechecker.

foo :: Real -> DataA
foo x = {a = add x 5.0, b = {c = [add x 2.0], d = "yolo"}}
