module m (foo, bar)

type R => Str = "character"
type R => Int = "integer"
type R => (Tuple2 a b) = "list" a b

type Py => Str = "str"
type Py => Int = "int"
type Py => (Tuple2 a b) = "tuple" a b

-- So this is really obvious code duplication now, but I'll fix it later

record Person = Person
  { name :: Str
  , age :: Int
  }

record Py => Person = "dict"
  { name :: Str
  , age :: Int
  }

record R => Person = "list"
  { name :: Str
  , age :: Int
  }

source Py from "foo.py" ("foo")
source R from "foo.R" ("id")

id a :: a -> a
foo :: Str -> Person

bar = id . foo
