module m (f0, f1, f2, f3, f4, f5)

type Py => Int = "int"
type Py => Str = "str"
type Py => Tuple2 a b = "tuple" a b
type Py => Tuple3 a b c = "tuple" a b c
type Py => List a = "list" a

source Py from "foo.py"
 (  "foo" as f0
 ,  "foo" as f1
 ,  "foo" as f2
 ,  "foo" as f3
 ,  "foo" as f4
 ,  "foo" as f5
 )

f0 :: [Int] -> [Int]
f1 :: [(Str,Int)] -> [(Str,Int)]
f2 :: ([Str],[Int]) -> ([Str],[Int])
f3 :: ([([Int],[Int],Int)],Int) -> ([([Int],[Int],Int)],Int)
f4 :: [[[Int]]] -> [[[Int]]]
f5 :: ([([Str],[Int],Int)],Int) -> ([([Str],[Int],Int)],Int)
