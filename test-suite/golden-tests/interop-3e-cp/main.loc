module main (foo)

import types (Real, List)
import base-cpp (zipWith, mul)
import base-py (add)

add3 x y z = add x (add y z)

foo :: Real -> [Real] -> [Real] -> [Real]
foo x = zipWith (\y -> add3 (mul x y) y)

--                          |-> z <-|
-- Tests the case where z is dependent on both a context argument (x) and a
-- lambda argument (y)
