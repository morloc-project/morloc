module main (foo)

type Cpp => Str = "std::string"
type Cpp => Int = "int"
type Cpp => List a = "std::vector<$1>" a

source Cpp from "person.h" ("PersonYay", "id")
id a :: a -> a 

table (Person a) = Person {name :: Str, info :: a}
table Cpp => Person a = "PersonYay"

-- This function returns the input, but passes it though a language-specific id
-- function, which forces deserialization and then serialization.
foo :: Person Int -> Person Int
foo xs = id xs
