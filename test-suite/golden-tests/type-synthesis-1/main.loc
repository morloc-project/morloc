module foosy (foo, foos, sfoos, bar)

source Py from "foo.py" ("foo", "foos", "sfoos", "toPair", "swapPair")

type Py => Int = "int"
type Py => (List a) = "list" a
type Py => (Tuple2 a b) = "tuple" a b

foo :: Int -> Int
foos :: Int -> [Int]
sfoos :: [Int] -> (Int, [Int])
toPair a :: a -> (a, a)
swapPair a b :: (a, b) -> (b, a)

bar x = toPair (swapPair (foo x, x))
